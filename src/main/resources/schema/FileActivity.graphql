# Query
extend type Query  {
     allFileActivity:[FileActivity]
     fileActivity(id: ID! ):FileActivity
     allFileActivityByFileId(fileId: ID!):[FileActivity]
}

#mutation
extend type  Mutation{
     createFileActivity(FileActivity: FileActivityInput! ):FileActivity
     updateFileActivity(FileActivity: FileActivityInput! ):FileActivity
     deleteFileActivity(id: Int!):Boolean
     changeValid(valid: Boolean!, fileActivityId: ID!):Boolean
}

type FileActivity {
     id :ID
     current: Boolean
     file: File
     activity:Activity
     dataFields:[ActivityDataField]
     reprises:[Reprise]
     fileTasks:[FileTask]
     valid: Boolean
}
input FileActivityInput  {
     id :ID
     current: Boolean
     file: FileInput
     activity:ActivityInput
     dataFields:[ActivityDataFieldInput]
     #repises:[RepriseInput]
     fileTasks:[FileTaskInput]
     valid: Boolean

}
type FileState  {
     id :ID
     current: Boolean
     type:FileStateType
     file: File
}
input FileStateInput  {
     id :ID
     current: Boolean
     type:FileStateTypeInput
     file: FileInput
}
