# Query
extend type Query  {
    getFileTask(fileTaskId: ID!): FileTask
    allFileTaskByAssignedToId(assignedToId: ID!):[FileTask]
    all: [FileTask]
    fileTask(id: ID!):FileTask
    #   currentFilePhase(fileActivityId: ID!):FileTask
    #  currentFilePhaseState(fileAgentId: ID!):FilePhaseState
    # currentFilePhaseAgent(filePhaseId: ID!):FilePhaseAgent
    allFileTaskByFileActivityId(fileActivityId: ID!):[FileTask]
    allFileTaskByFileActivityIdInTrash(fileActivityId: ID!):[FileTask]
    allReturnedCause:[ReturnedCause]
}

extend type Mutation{
    createFileTask(input: FileTaskInput!):FileTask
    changeAssignedTo(assignedToId: ID,fileTaskId: ID!):Agent
    changeFileTaskSituation(situationId: ID!,fileTaskId: ID!):FileTaskSituation
    changeStartDate(startDate: String!,fileTaskId: ID!):Boolean
    changeDueDate(dueDate: String!,fileTaskId: ID!):Boolean
    changeTitle(title: String,fileTaskId: ID!):Boolean
    changeDescription(input: CommentInput):DescriptionComment
    changeRetour(input: CommentInput):ReturnedComment
    changeDataField(input: ActivityDataFieldInput):Boolean
    # changeAgent(agentId: ID!,phaseFileAgentId: ID!):FilePhaseAgent
    # changePhaseState(stateId: ID!,phaseFileAgentId: ID!):FilePhaseState
    updateFileTask(input: FileTaskInput!):FileTask
    changeState(fileTaskId:ID! ,taskStateId: ID!):TaskState
    changeReturnedCause(fileTaskId:ID!,returnedCauseId: ID!): ReturnedCause
    changeReturned(fileTaskId:ID! ,returned: Boolean!):Boolean
    createChildFileTask(input: FileTaskInput!):FileTask
    changeParent(fileTaskId:ID!,parentId:ID):Boolean
    sendFileTaskToTrash(fileTaskId: ID!): Boolean
    recoverFileTaskFromTrash(fileTaskId: ID!): Boolean
    uploadAttachments(attachments: [Upload]!,fileTaskId:ID!):[Attachment]
    #    deleteFileTask(id: ID!): Boolean
    changeFileTaskOrder(fileTaskId: ID!, fileTaskBeforeId: ID!): Boolean
}


type FileTask{
    id:ID
    current:Boolean
    fileActivity:FileActivity
    task:Task
    toStartDate: String
    order:Int
    dueDate: String
    startDate:String
    endDate:String
    reporter:Agent
    assignedTo:Agent
    fileTaskSituations:[FileTaskSituation]
    state: TaskState
    currentFileTaskSituation:FileTaskSituation
    title: String
    description: DescriptionComment
    retour: ReturnedComment
    returnedCause:ReturnedCause
    returned:Boolean
    inTrash:Boolean
    parent: FileTask
    attachments: [Attachment]
    number: Int
}
input FileTaskInput {
    id:ID
    current:Boolean
    fileActivity:FileActivityInput
    toStartDate: String
    dueDate: String
    startDate:String
    endDate:String
    reporter:AgentInput
    assignedTo:AgentInput
    fileTaskSituations:[FileTaskSituationInput]
    state:TaskStateInput
    currentFileTaskSituation:FileTaskSituationInput
    title: String
    description: CommentInput
    retour: CommentInput
    returnedCause:ReturnedCauseInput
    returned:Boolean
    parent: FileTaskInput
    attachments: [AttachmentInput]
    task:TaskInput
    order:Int
}
